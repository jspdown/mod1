var SKVOXCPU=SKVOXCPU||{version:"1.0.0"};console.log("Using SKVOXCPU "+SKVOXCPU.version);
SKVOXCPU.Voxelizer=function(c,a,b,d,e){this.mesh=c;this.voxelSizeX=a||1;this.voxelSizeY=b||1;this.voxelSizeZ=d||1;this.transformMatrix=e||new THREE.Matrix4;this.__EPSILON=0.0010;this.geometry=c.geometry;this.mesh.material.side=THREE.DoubleSide;this.voxelData={};this.intersectionFirstAndLastHeights={};this.geometry.boundingBox||this.geometry.computeBoundingBox();this.bbox=this.geometry.boundingBox;this.__min=new THREE.Vector3;this.__max=new THREE.Vector3;this.__transformedBbox=this.bbox.clone();this.__zMaxMultiple=
this.__zMinMultiple=this.__yMaxMultiple=this.__yMinMultiple=this.__xMaxMultiple=this.__xMinMultiple=0;this.__voxelMeshes={};this.__raycaster=new THREE.Raycaster;this.__startPoint=new THREE.Vector3(0,-99999,0);this.__up=new THREE.Vector3(0,1,0);this.__mat=new THREE.Matrix4;this.__voxelGeom=new THREE.CubeGeometry(this.voxelSizeX,this.voxelSizeY,this.voxelSizeZ);this.__voxelMaterial=new THREE.MeshPhongMaterial};
SKVOXCPU.Voxelizer.prototype.__updateMinMax=function(){this.__mat.getInverse(this.transformMatrix);this.__mat.multiply(this.mesh.matrixWorld);var c=this.__transformedBbox.copy(this.bbox).applyMatrix4(this.__mat);this.__min=c.min;this.__max=c.max;this.__xMinMultiple=Math.ceil(this.__min.x/this.voxelSizeX)*this.voxelSizeX;this.__xMaxMultiple=Math.floor(this.__max.x/this.voxelSizeX)*this.voxelSizeX;this.__yMinMultiple=Math.ceil(this.__min.y/this.voxelSizeY)*this.voxelSizeY;this.__yMaxMultiple=Math.floor(this.__max.y/
this.voxelSizeY)*this.voxelSizeY;this.__zMinMultiple=Math.ceil(this.__min.z/this.voxelSizeZ)*this.voxelSizeZ;this.__zMaxMultiple=Math.floor(this.__max.z/this.voxelSizeZ)*this.voxelSizeZ};
SKVOXCPU.Voxelizer.prototype.updateIntersections=function(){this.__updateMinMax();var c,a,b;for(c=this.__xMinMultiple;c<=this.__xMaxMultiple+this.__EPSILON;c+=this.voxelSizeX)for(this.intersectionFirstAndLastHeights[c]={},a=this.__zMinMultiple;a<=this.__zMaxMultiple+this.__EPSILON;a+=this.voxelSizeZ)if(this.__startPoint.x=c,this.__startPoint.z=a,this.__raycaster.set(this.__startPoint.clone().applyMatrix4(this.transformMatrix),this.__up.clone().transformDirection(this.transformMatrix)),(b=this.__raycaster.intersectObject(this.mesh))&&
2<=b.length){this.__mat.getInverse(this.transformMatrix);var d=b[0].point.applyMatrix4(this.__mat);b=b[b.length-1].point.applyMatrix4(this.__mat);this.intersectionFirstAndLastHeights[c][a]=[];this.intersectionFirstAndLastHeights[c][a].push(d.y);this.intersectionFirstAndLastHeights[c][a].push(b.y)}};
SKVOXCPU.Voxelizer.prototype.voxelize=function(){this.updateIntersections();var c,a,b;for(c=this.__xMinMultiple;c<=this.__xMaxMultiple+this.__EPSILON;c+=this.voxelSizeX)for(this.voxelData[c]={},b=this.__zMinMultiple;b<=this.__zMaxMultiple+this.__EPSILON;b+=this.voxelSizeZ)for(this.voxelData[c][b]={},a=this.__yMinMultiple;a<=this.__yMaxMultiple+this.__EPSILON;a+=this.voxelSizeY)this.intersectionFirstAndLastHeights[c][b]&&(this.voxelData[c][b][a]=a<=this.intersectionFirstAndLastHeights[c][b][0]||a>=
this.intersectionFirstAndLastHeights[c][b][1]?0:1)};SKVOXCPU.Voxelizer.prototype.hideAllVoxels=function(){var c,a,b,d,e,f;for(d in this.__voxelMeshes)if(this.__voxelMeshes.hasOwnProperty(d))for(e in c=this.__voxelMeshes[d],c)if(c.hasOwnProperty(e))for(f in b=c[e],b)b.hasOwnProperty(f)&&(a=b[f],a.visible=!1)};
SKVOXCPU.Voxelizer.prototype.visualize=function(c){this.hideAllVoxels();var a,b,d,e;for(a=this.__xMinMultiple;a<=this.__xMaxMultiple+this.__EPSILON;a+=this.voxelSizeX)for(this.__voxelMeshes[a]||(this.__voxelMeshes[a]={}),d=this.__zMinMultiple;d<=this.__zMaxMultiple+this.__EPSILON;d+=this.voxelSizeZ)for(this.__voxelMeshes[a][d]||(this.__voxelMeshes[a][d]={}),b=this.__yMinMultiple;b<=this.__yMaxMultiple+this.__EPSILON;b+=this.voxelSizeY)this.__voxelMeshes[a][d][b]||(e=new THREE.Mesh(this.__voxelGeom,
this.__voxelMaterial),this.__voxelMeshes[a][d][b]=e,e.position.x=a,e.position.y=b,e.position.z=d,e.visible=!1,c.add(e)),1===this.voxelData[a][d][b]&&(this.__voxelMeshes[a][d][b].visible=!0)};
