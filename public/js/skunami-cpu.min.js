var SKUNAMICPU=SKUNAMICPU||{version:"1.0.0"};console.log("Using SKUNAMICPU "+SKUNAMICPU.version);SKUNAMICPU.Obstacle=function(a){this.mesh=a;this.updateAlways=!1;this.update()};SKUNAMICPU.Obstacle.prototype.update=function(){throw Error("Abstract method not implemented");};SKUNAMICPU.Obstacle.prototype.updateObstacleField=function(a){throw Error("Abstract method not implemented");};SKUNAMICPU.Obstacle.prototype.updateFlowObstaclesField=function(a){throw Error("Abstract method not implemented");};
SKUNAMICPU.VoxelizedObstacle=function(a,d,c,b,e){this.voxelizer=new SKVOXCPU.Voxelizer(a,d,c,b,e);SKUNAMICPU.Obstacle.call(this,a)};SKUNAMICPU.VoxelizedObstacle.prototype=Object.create(SKUNAMICPU.Obstacle.prototype);SKUNAMICPU.VoxelizedObstacle.prototype.constructor=SKUNAMICPU.VoxelizedObstacle;SKUNAMICPU.VoxelizedObstacle.prototype.update=function(){this.voxelizer.updateIntersections()};
SKUNAMICPU.VoxelizedObstacle.prototype.updateObstacleField=function(a){this.updateAlways&&this.update();var d=a.mesh.geometry.vertices,c,b,e,f,h;for(e=this.voxelizer.__xMinMultiple;e<=this.voxelizer.__xMaxMultiple+this.voxelizer.__EPSILON;e+=this.voxelizer.voxelSizeX)for(f=this.voxelizer.__zMinMultiple;f<=this.voxelizer.__zMaxMultiple+this.voxelizer.__EPSILON;f+=this.voxelizer.voxelSizeZ)(b=this.voxelizer.intersectionFirstAndLastHeights)&&b[e]&&b[e][f]&&(c=b[e][f][0],b=b[e][f][1],h=a.__calcVertexId(e,
f),d[h]&&c<d[h].y&&b>d[h].y&&(a.obstacleField[h]=0))};
SKUNAMICPU.VoxelizedObstacle.prototype.updateFlux=function(a){this.updateAlways&&this.update();var d,c,b,e,f,h,g;for(b=this.voxelizer.__xMinMultiple;b<=this.voxelizer.__xMaxMultiple+this.voxelizer.__EPSILON;b+=this.voxelizer.voxelSizeX)for(e=this.voxelizer.__zMinMultiple;e<=this.voxelizer.__zMaxMultiple+this.voxelizer.__EPSILON;e+=this.voxelizer.voxelSizeZ)(c=this.voxelizer.intersectionFirstAndLastHeights)&&c[b]&&c[b][e]&&(d=c[b][e][0],c=c[b][e][1],f=a.__calcVertexId(b,e),h=f-1,g=a.baseHeights[h]+
a.heights[h],d<g&&c>g&&(a.fluxR[h]=0),h=f+1,g=a.baseHeights[h]+a.heights[h],d<g&&c>g&&(a.fluxL[h]=0),h=f-a.res,g=a.baseHeights[h]+a.heights[h],d<g&&c>g&&(a.fluxB[h]=0),h=f+a.res,g=a.baseHeights[h]+a.heights[h],d<g&&c>g&&(a.fluxT[h]=0))};SKUNAMICPU.TerrainObstacle=function(a){this.intersectionHeights=[];SKUNAMICPU.Obstacle.call(this,a)};SKUNAMICPU.TerrainObstacle.prototype=Object.create(SKUNAMICPU.Obstacle.prototype);SKUNAMICPU.TerrainObstacle.prototype.constructor=SKUNAMICPU.TerrainObstacle;
SKUNAMICPU.TerrainObstacle.prototype.update=function(){var a=this.mesh.geometry.vertices,d,c;d=0;for(c=a.length;d<c;d++)this.intersectionHeights[d]=[],this.intersectionHeights[d].push(0),this.intersectionHeights[d].push(a[d].y)};
SKUNAMICPU.TerrainObstacle.prototype.updateObstacleField=function(a){this.updateAlways&&this.update();var d=a.mesh.geometry.vertices,c,b,e,f;e=0;for(f=a.res*a.res;e<f;e++)this.intersectionHeights[e]&&(c=this.intersectionHeights[e][0],b=this.intersectionHeights[e][1],c<d[e].y&&b>d[e].y&&(a.obstacleField[e]=0))};SKUNAMICPU.TerrainObstacle.prototype.updateFlux=function(a){};
SKUNAMICPU.DepthMapObstacleManager={depthMapSize:10,depthMapRes:512,depthMapNear:-2,depthMapFar:2,init:function(){this.__loadScene();this.__prepareDepthMapImageElements()},update:function(){this.depthMapRenderer.autoClear=!1;this.depthMapRenderer.clear();this.depthMapRenderer.render(this.depthMapScene,this.depthMapCamera);this.$depthMapImageObj[0].src=this.depthMapRenderer.domElement.toDataURL()},addObstacle:function(a){var d=new THREE.Mesh(a.geometry,new THREE.MeshDepthMaterial({side:THREE.DoubleSide,
overdraw:!0}));d.position=a.position;d.rotation=a.rotation;d.scale=a.scale;this.depthMapScene.add(d)},getObstacleDepthMap:function(){return this.obstacleDepthMapCanvasElemContext.getImageData(0,0,this.depthMapRes,this.depthMapRes).data},__loadScene:function(){if(!this.depthMapRenderer){this.depthMapRenderer=new THREE.CanvasRenderer({antialias:!0});this.depthMapRenderer.setSize(this.depthMapRes,this.depthMapRes);this.depthMapRenderer.setClearColor("#000000",1);this.obstacleDepthMapCanvasElemContext=
this.depthMapRenderer.domElement.getContext("2d");this.depthMapScene=new THREE.Scene;var a=this.depthMapSize/2;this.depthMapCamera=new THREE.OrthographicCamera(-a,a,-a,a,this.depthMapNear,this.depthMapFar);this.depthMapCamera.rotation.x=THREE.Math.degToRad(90);this.depthMapCamera.position.y=0}},__prepareDepthMapImageElements:function(){this.$depthMapImageObj||(this.$depthMapImageObj=$(new Image),this.$depthMapImageObj[0].src=this.depthMapRenderer.domElement.toDataURL(),this.$depthMapImageObj.css({position:"fixed",
top:"55px",left:0}),$("body").append(this.$depthMapImageObj))}};
SKUNAMICPU.HeightFieldWater=function(a){if("undefined"===typeof a.mesh)throw Error("mesh not specified");this.mesh=a.mesh;if("undefined"===typeof a.size)throw Error("size not specified");this.size=a.size;this.halfSize=this.size/2;if("undefined"===typeof a.res)throw Error("res not specified");this.res=a.res;if("undefined"===typeof a.dampingFactor)throw Error("dampingFactor not specified");this.dampingFactor=a.dampingFactor;this.__meanHeight=a.meanHeight||0;this.geometry=this.mesh.geometry;this.numVertices=
this.res*this.res;if(this.numVertices!==this.geometry.vertices.length)throw Error("Number of vertices in mesh does not match res*res");this.segmentSize=this.size/this.res;this.segmentSizeSquared=this.segmentSize*this.segmentSize;this.obstacles={};this.sourceField=[];this.disturbField=[];this.obstacleField=[];this.verticalVelField=[];this.obstaclesActive=!0;this.__worldMatInv=new THREE.Matrix4;this.__localPos=new THREE.Vector3;this.init()};
SKUNAMICPU.HeightFieldWater.prototype.init=function(){var a;for(a=0;a<this.numVertices;a++)this.sourceField[a]=0,this.disturbField[a]=0,this.obstacleField[a]=1,this.verticalVelField[a]=0};SKUNAMICPU.HeightFieldWater.prototype.update=function(a){if(this.obstaclesActive){var d=Object.keys(this.obstacles),c,b,e=d.length;for(b=0;b<e;b++)c=this.obstacles[d[b]],c.updateObstacleField(this)}this.sim(a);this.__clearFields()};
SKUNAMICPU.HeightFieldWater.prototype.sim=function(a){throw Error("Abstract method not implemented");};SKUNAMICPU.HeightFieldWater.prototype.setMeanHeight=function(a){this.__meanHeight=a;a=this.geometry.vertices;var d=this.res-1,c,b,e;for(c=b=0;c<this.res;c++)e=c*this.res+b,a[e].y=this.__meanHeight;b=d;for(c=0;c<this.res;c++)e=c*this.res+b,a[e].y=this.__meanHeight;c=0;for(b=1;b<d;b++)e=c*this.res+b,a[e].y=this.__meanHeight;c=d;for(b=1;b<d;b++)e=c*this.res+b,a[e].y=this.__meanHeight};
SKUNAMICPU.HeightFieldWater.prototype.__calcVertexId=function(a,d){return Math.floor((d+this.halfSize)/this.size*this.res)*this.res+Math.floor((a+this.halfSize)/this.size*this.res)};SKUNAMICPU.HeightFieldWater.prototype.disturb=function(a,d){this.__worldMatInv.getInverse(this.mesh.matrixWorld);this.__localPos.copy(a).applyMatrix4(this.__worldMatInv);var c=this.__calcVertexId(this.__localPos.x,this.__localPos.z);this.disturbById(c,d)};
SKUNAMICPU.HeightFieldWater.prototype.disturbById=function(a,d){this.disturbField[a]=d};SKUNAMICPU.HeightFieldWater.prototype.disturbNeighbours=function(a,d){this.__worldMatInv.getInverse(this.mesh.matrixWorld);this.__localPos.copy(a).applyMatrix4(this.__worldMatInv);var c=this.__calcVertexId(this.__localPos.x,this.__localPos.z);this.disturbNeighboursById(c,d)};
SKUNAMICPU.HeightFieldWater.prototype.disturbNeighboursById=function(a,d){var c=this.geometry.vertices,b=a+this.res;c[b]&&this.disturbById(b,d);b=a-this.res;c[b]&&this.disturbById(b,d);b=a+1;c[b]&&this.disturbById(b,d);b=a-1;c[b]&&this.disturbById(b,d)};
SKUNAMICPU.HeightFieldWater.prototype.source=function(a,d,c){this.__worldMatInv.getInverse(this.mesh.matrixWorld);this.__localPos.copy(a).applyMatrix4(this.__worldMatInv);var b,e;for(a=-c;a<=c;a+=this.segmentSize)for(e=-c;e<=c;e+=this.segmentSize)b=Math.sqrt(a*a+e*e),b<c&&(b=this.__calcVertexId(this.__localPos.x+a,this.__localPos.z+e),this.sourceById(b,d))};SKUNAMICPU.HeightFieldWater.prototype.sourceById=function(a,d){this.sourceField[a]=d};
SKUNAMICPU.HeightFieldWater.prototype.flood=function(a){var d,c,b;for(d=0;d<this.res;d++)for(c=0;c<this.res;c++)b=d*this.res+c,this.disturbField[b]+=a/(this.res*this.res)};
SKUNAMICPU.HeightFieldWater.prototype.addObstacle=function(a,d){if(!(a instanceof SKUNAMICPU.Obstacle))throw Error("obstacle must be of type SKUNAMICPU.Obstacle");if("string"!==typeof d)throw Error("name must be of type string");if(-1!==Object.keys(this.obstacles).indexOf(d))throw Error("obstacle name already exists: "+d);this.obstacles[d]=a};SKUNAMICPU.HeightFieldWater.prototype.setObstaclesActive=function(a){this.obstaclesActive=a};
SKUNAMICPU.HeightFieldWater.prototype.reset=function(){var a,d=this.geometry.vertices;for(a=0;a<this.numVertices;a++)d[a].y=this.__meanHeight;this.__clearFields()};SKUNAMICPU.HeightFieldWater.prototype.__clearFields=function(){var a;for(a=0;a<this.numVertices;a++)this.sourceField[a]=0,this.disturbField[a]=0,this.obstacleField[a]=1};
SKUNAMICPU.HeightFieldWater.prototype.__updateMesh=function(){this.geometry.verticesNeedUpdate=!0;this.geometry.computeFaceNormals();this.geometry.computeVertexNormals();this.geometry.normalsNeedUpdate=!0};SKUNAMICPU.MuellerGdc2008HwWater=function(a){SKUNAMICPU.HeightFieldWater.call(this,a)};SKUNAMICPU.MuellerGdc2008HwWater.prototype=Object.create(SKUNAMICPU.HeightFieldWater.prototype);SKUNAMICPU.MuellerGdc2008HwWater.prototype.constructor=SKUNAMICPU.MuellerGdc2008HwWater;
SKUNAMICPU.MuellerGdc2008HwWater.prototype.sim=function(a){var d,c,b=this.geometry.vertices,e=this.res-1;for(a=1;a<e;a++)for(d=1;d<e;d++)c=a*this.res+d,b[c].y+=this.disturbField[c],b[c].y=(b[c].y-this.__meanHeight)*this.obstacleField[c]+this.__meanHeight;for(a=1;a<e;a++)for(d=1;d<e;d++)c=a*this.res+d,this.verticalVelField[c]+=(b[(a-1)*this.res+d].y+b[(a+1)*this.res+d].y+b[a*this.res+(d-1)].y+b[a*this.res+(d+1)].y)/4-b[c].y,this.verticalVelField[c]*=this.dampingFactor;for(a=1;a<e;a++)for(d=1;d<e;d++)c=
a*this.res+d,b[c].y+=this.verticalVelField[c];this.__updateMesh()};SKUNAMICPU.MuellerGdc2008Water=function(a){SKUNAMICPU.HeightFieldWater.call(this,a);if("undefined"===typeof a.horizontalSpeed)throw Error("horizontalSpeed not specified");this.horizontalSpeed=a.horizontalSpeed;this.horizontalSpeedSquared=this.horizontalSpeed*this.horizontalSpeed};SKUNAMICPU.MuellerGdc2008Water.prototype=Object.create(SKUNAMICPU.HeightFieldWater.prototype);SKUNAMICPU.MuellerGdc2008Water.prototype.constructor=SKUNAMICPU.MuellerGdc2008Water;
SKUNAMICPU.MuellerGdc2008Water.prototype.sim=function(a){a=1/60;var d,c,b,e=this.geometry.vertices,f=this.res-1;for(d=1;d<f;d++)for(c=1;c<f;c++)b=d*this.res+c,e[b].y+=this.disturbField[b],e[b].y=(e[b].y-this.__meanHeight)*this.obstacleField[b]+this.__meanHeight;var h;for(d=1;d<f;d++)for(c=1;c<f;c++)b=d*this.res+c,h=this.horizontalSpeedSquared*(e[b+this.res].y+e[b-this.res].y+e[b+1].y+e[b-1].y-4*e[b].y)/this.segmentSizeSquared,this.verticalVelField[b]+=h*a,this.verticalVelField[b]*=this.dampingFactor;
for(d=1;d<f;d++)for(c=1;c<f;c++)b=d*this.res+c,e[b].y+=this.verticalVelField[b]*a;this.__updateMesh()};SKUNAMICPU.XWater=function(a){this.field1=[];this.field2=[];SKUNAMICPU.HeightFieldWater.call(this,a)};SKUNAMICPU.XWater.prototype=Object.create(SKUNAMICPU.HeightFieldWater.prototype);SKUNAMICPU.XWater.prototype.constructor=SKUNAMICPU.XWater;SKUNAMICPU.XWater.prototype.init=function(){var a;for(a=0;a<this.numVertices;a++)this.field1[a]=this.__meanHeight,this.field2[a]=this.__meanHeight;SKUNAMICPU.HeightFieldWater.prototype.init.call(this)};
SKUNAMICPU.XWater.prototype.reset=function(){var a;for(a=0;a<this.numVertices;a++)this.field1[a]=this.__meanHeight,this.field2[a]=this.__meanHeight;SKUNAMICPU.HeightFieldWater.prototype.reset.call(this)};
SKUNAMICPU.XWater.prototype.setMeanHeight=function(a){this.__meanHeight=a;var d=this.res-1,c,b,e;for(c=b=0;c<this.res;c++)e=c*this.res+b,this.field1[e]=this.__meanHeight,this.field2[e]=this.__meanHeight;b=d;for(c=0;c<this.res;c++)e=c*this.res+b,this.field1[e]=this.__meanHeight,this.field2[e]=this.__meanHeight;c=0;for(b=1;b<d;b++)e=c*this.res+b,this.field1[e]=this.__meanHeight,this.field2[e]=this.__meanHeight;c=d;for(b=1;b<d;b++)e=c*this.res+b,this.field1[e]=this.__meanHeight,this.field2[e]=this.__meanHeight;
SKUNAMICPU.HeightFieldWater.prototype.setMeanHeight.call(this,a)};
SKUNAMICPU.XWater.prototype.sim=function(a){var d,c,b=this.geometry.vertices,e=this.res-1;for(a=1;a<e;a++)for(d=1;d<e;d++)c=a*this.res+d,this.field1[c]+=this.disturbField[c],this.field1[c]=(this.field1[c]-this.__meanHeight)*this.obstacleField[c]+this.__meanHeight;for(a=1;a<e;a++)for(d=1;d<e;d++)c=a*this.res+d,this.field2[c]=(this.field1[(a-1)*this.res+d]+this.field1[(a+1)*this.res+d]+this.field1[a*this.res+(d-1)]+this.field1[a*this.res+(d+1)])/2-this.field2[c],this.field2[c]=(this.field2[c]-this.__meanHeight)*
this.dampingFactor+this.__meanHeight;for(a=1;a<e;a++)for(d=1;d<e;d++)c=a*this.res+d,b[c].y=this.field2[c];this.__updateMesh();for(a=1;a<e;a++)for(d=1;d<e;d++)c=a*this.res+d,b=this.field2[c],this.field2[c]=this.field1[c],this.field1[c]=b};
SKUNAMICPU.TessendorfIWaveWater=function(a){this.prevHeight=[];this.vertDeriv=[];SKUNAMICPU.HeightFieldWater.call(this,a);if("undefined"===typeof a.kernelRadius)throw Error("kernelRadius not specified");this.kernelRadius=a.kernelRadius;if("undefined"===typeof a.substeps)throw Error("substeps not specified");this.substeps=a.substeps;this.gravity=-9.81;this.G={0:{1:0.6782766063331379,2:0.15642080318487095,3:-0.06532739057096157,4:-0.06444781066526209},1:{1:0.4445648954185427,2:0.07225753616898249,3:-0.07377485074364465,
4:-0.059964799734097914},2:{1:0.07225753616898249,2:-0.04993877689422348,3:-0.07593786512383575,4:-0.04726251879247821},3:{1:-0.07377485074364465,2:-0.07593786512383575,3:-0.05553701410671365,4:-0.031433210050842826},4:{1:-0.059964799734097914,2:-0.04726251879247821,3:-0.031433210050842826,4:-0.019006732548424117}}};SKUNAMICPU.TessendorfIWaveWater.prototype=Object.create(SKUNAMICPU.HeightFieldWater.prototype);SKUNAMICPU.TessendorfIWaveWater.prototype.constructor=SKUNAMICPU.TessendorfIWaveWater;
SKUNAMICPU.TessendorfIWaveWater.prototype.init=function(){var a;for(a=0;a<this.numVertices;a++)this.prevHeight[a]=0,this.vertDeriv[a]=0;SKUNAMICPU.HeightFieldWater.prototype.init.call(this)};SKUNAMICPU.TessendorfIWaveWater.prototype.reset=function(){var a;for(a=0;a<this.numVertices;a++)this.prevHeight[a]=0,this.vertDeriv[a]=0;SKUNAMICPU.HeightFieldWater.prototype.reset.call(this)};
SKUNAMICPU.TessendorfIWaveWater.prototype.sim=function(a){a=1/60;var d;for(d=0;d<this.substeps;d++){var c,b,e,f=this.geometry.vertices,h=this.res-1;for(c=1;c<h;c++)for(b=1;b<h;b++)e=c*this.res+b,f[e].y+=this.disturbField[e],f[e].y=(f[e].y-this.__meanHeight)*this.obstacleField[e]+this.__meanHeight,f[e].y-=this.__meanHeight;this.__symmetricalConvolve();var g,k=2-this.dampingFactor*a,l=1+this.dampingFactor*a,m=this.gravity*a*a;for(c=1;c<h;c++)for(b=1;b<h;b++)e=c*this.res+b,g=f[e].y,f[e].y=(f[e].y*k-
this.prevHeight[e]-this.vertDeriv[e]*m)/l,this.prevHeight[e]=g,f[e].y+=this.__meanHeight}this.__updateMesh()};
SKUNAMICPU.TessendorfIWaveWater.prototype.__symmetricalConvolve=function(){var a,d,c,b,e,f,h,g=this.geometry.vertices;a=this.kernelRadius;for(e=this.res-this.kernelRadius;a<e;a++)for(d=this.kernelRadius,f=this.res-this.kernelRadius;d<f;d++){h=a*this.res+d;this.vertDeriv[h]=g[h].y;c=0;for(b=1;b<=this.kernelRadius;b++)this.vertDeriv[h]+=this.G[c][b]*(g[(a+c)*this.res+(d+b)].y+g[(a+c)*this.res+(d-b)].y+g[(a+b)*this.res+(d+c)].y+g[(a-b)*this.res+(d+c)].y);for(c=1;c<=this.kernelRadius;c++)for(b=1;b<=this.kernelRadius;b++)this.vertDeriv[h]+=
this.G[c][b]*(g[(a+c)*this.res+(d+b)].y+g[(a-c)*this.res+(d-b)].y+g[(a+c)*this.res+(d-b)].y+g[(a-c)*this.res+(d+b)].y)}};
SKUNAMICPU.TessendorfIWaveWater.prototype.__convolve=function(){var a,d,c,b,e,f,h,g=this.geometry.vertices;a=this.kernelRadius;for(e=this.res-this.kernelRadius;a<e;a++)for(d=this.kernelRadius,f=this.res-this.kernelRadius;d<f;d++)for(h=a*this.res+d,this.vertDeriv[h]=0,c=-this.kernelRadius;c<=this.kernelRadius;c++)for(b=-this.kernelRadius;b<=this.kernelRadius;b++)this.vertDeriv[h]+=this.G[c][b]*g[(a+c)*this.res+(d+b)].y};
SKUNAMICPU.HeightFieldWaterWithVel=function(a){this.vel=[];this.velColors=[];if("undefined"===typeof a.scene)throw Error("scene not specified");this.scene=a.scene;SKUNAMICPU.HeightFieldWater.call(this,a);this.minVisVel=a.minVisVel||0;this.maxVisVel=a.maxVisVel||0.25;this.minVisVelLength=a.minVisVelLength||0.02;this.maxVisVelLength=a.maxVisVelLength||1;this.lineStartColor=a.lineStartColor||new THREE.Color(26316);this.lineEndColor=a.lineEndColor||new THREE.Color(10092543);this.waterColor=a.waterColor||
new THREE.Color(26316);this.foamColor=a.foamColor||new THREE.Color(10092543);this.__faceIndices=["a","b","c","d"];this.__origMeshMaterialSettings={emissive:this.mesh.material.emissive.clone(),vertexColors:this.mesh.material.vertexColors};this.__visVelLines=this.__visVelColors=!1};SKUNAMICPU.HeightFieldWaterWithVel.prototype=Object.create(SKUNAMICPU.HeightFieldWater.prototype);SKUNAMICPU.HeightFieldWaterWithVel.prototype.constructor=SKUNAMICPU.HeightFieldWaterWithVel;
SKUNAMICPU.HeightFieldWaterWithVel.prototype.init=function(){var a,d;a=0;for(d=this.mesh.geometry.vertices.length;a<d;a++)this.vel[a]=new THREE.Vector3,this.velColors[a]=new THREE.Color;var c=new THREE.Geometry;a=0;for(d=2*this.mesh.geometry.vertices.length;a<d;a++)c.vertices.push(new THREE.Vector3),0===a%2?c.colors.push(new THREE.Color(16777215)):c.colors.push(new THREE.Color(16711680));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.velLinesMesh=new THREE.Line(c,a,THREE.LinePieces);
this.scene.add(this.velLinesMesh);SKUNAMICPU.HeightFieldWater.prototype.init.call(this)};SKUNAMICPU.HeightFieldWaterWithVel.prototype.update=function(){SKUNAMICPU.HeightFieldWater.prototype.update.call(this);this.__visVelColors&&this.updateVelColors();this.__visVelLines&&this.updateVelLines()};
SKUNAMICPU.HeightFieldWaterWithVel.prototype.visualizeVelColors=function(a){(this.__visVelColors=a)?(this.mesh.material.emissive.set("#ffffff"),this.mesh.material.vertexColors=THREE.VertexColors):(this.mesh.material.emissive.set(this.__origMeshMaterialSettings.emissive),this.mesh.material.vertexColors=this.__origMeshMaterialSettings.vertexColors);this.mesh.geometry.buffersNeedUpdate=!0;this.mesh.material.needsUpdate=!0};
SKUNAMICPU.HeightFieldWaterWithVel.prototype.visualizeVelLines=function(a){this.__visVelLines=a;this.velLinesMesh.visible=a};
SKUNAMICPU.HeightFieldWaterWithVel.prototype.updateVelColors=function(){var a,d,c,b,e,f,h;a=0;for(d=this.geometry.faces.length;a<d;a++)for(c=this.geometry.faces[a],e=c instanceof THREE.Face3?3:4,b=0;b<e;b++)f=c[this.__faceIndices[b]],h=this.vel[f].length()/(this.maxVisVel-this.minVisVel)+this.minVisVel,h=THREE.Math.clamp(h,0,1),c.vertexColors[b]=this.velColors[f].set(this.waterColor).lerp(this.foamColor,h);this.geometry.colorsNeedUpdate=!0};
SKUNAMICPU.HeightFieldWaterWithVel.prototype.updateVelLines=function(){var a=this.velLinesMesh.geometry.vertices,d=new THREE.Vector3,c=new THREE.Vector3,b,e,f;b=0;for(e=this.mesh.geometry.vertices.length;b<e;b++)d.copy(this.mesh.geometry.vertices[b]),c.copy(this.vel[b]),f=c.length(),f>this.maxVisVelLength?c.setLength(this.maxVisVelLength):f<this.minVisVelLength&&c.setLength(0),a[2*b].copy(d),a[2*b+1].copy(d).add(c);this.velLinesMesh.geometry.verticesNeedUpdate=!0};
SKUNAMICPU.PipeModelWater=function(a){this.baseHeights=[];this.heights=[];this.extPressures=[];this.fluxR=[];this.fluxB=[];this.fluxL=[];this.fluxT=[];this.minWaterHeight=-0.05;this.dHeights=[];this.terrainMesh="undefined"===typeof a.terrainMesh?null:a.terrainMesh;SKUNAMICPU.HeightFieldWaterWithVel.call(this,a);this.gravity=9.81;this.density=1;this.atmosPressure=0;this.pipeLength=this.segmentSize;this.pipeCrossSectionArea=this.pipeLength*this.pipeLength;this.flowChangers=[]};
SKUNAMICPU.PipeModelWater.prototype=Object.create(SKUNAMICPU.HeightFieldWaterWithVel.prototype);SKUNAMICPU.PipeModelWater.prototype.constructor=SKUNAMICPU.PipeModelWater;SKUNAMICPU.PipeModelWater.prototype.init=function(){var a,d;a=0;for(d=this.numVertices;a<d;a++)this.baseHeights[a]=0,this.heights[a]=0.1,this.extPressures[a]=0,this.fluxR[a]=0,this.fluxB[a]=0,this.fluxL[a]=0,this.fluxT[a]=0,this.dHeights[a]=0;SKUNAMICPU.HeightFieldWaterWithVel.prototype.init.call(this)};
SKUNAMICPU.PipeModelWater.prototype.reset=function(){var a,d;a=0;for(d=this.numVertices;a<d;a++)this.extPressures[a]=0;SKUNAMICPU.HeightFieldWaterWithVel.prototype.reset.call(this)};SKUNAMICPU.PipeModelWater.prototype.update=function(a){if(this.terrainMesh){var d=this.terrainMesh.geometry.vertices,c,b;c=0;for(b=this.numVertices;c<b;c++)this.baseHeights[c]=d[c].y}SKUNAMICPU.HeightFieldWaterWithVel.prototype.update.call(this,a)};
SKUNAMICPU.PipeModelWater.prototype.sim=function(a){var d,c,b,e=this.geometry.vertices,f=this.res-1;a=1/60/5;for(d=1;d<f;d++)for(c=1;c<f;c++)b=d*this.res+c,this.disturbField[b]*=this.obstacleField[b],this.heights[b]+=this.disturbField[b],this.heights[b]+=this.sourceField[b];var h;for(h=0;5>h;h++){var g,k,l=a*this.pipeCrossSectionArea*this.gravity/this.pipeLength;for(d=1;d<f;d++)for(c=1;c<f;c++)b=d*this.res+c,this.heights[b]<=this.minWaterHeight?(this.fluxL[b]=0,this.fluxR[b]=0,this.fluxT[b]=0,this.fluxB[b]=
0):(g=this.baseHeights[b]+this.heights[b],k=g-(this.baseHeights[b+1]+this.heights[b+1]),this.fluxR[b]*=this.dampingFactor,this.fluxR[b]+=k*l,0>this.fluxR[b]&&(this.fluxR[b]=0),k=g-(this.baseHeights[b-1]+this.heights[b-1]),this.fluxL[b]*=this.dampingFactor,this.fluxL[b]+=k*l,0>this.fluxL[b]&&(this.fluxL[b]=0),k=g-(this.baseHeights[b+this.res]+this.heights[b+this.res]),this.fluxB[b]*=this.dampingFactor,this.fluxB[b]+=k*l,0>this.fluxB[b]&&(this.fluxB[b]=0),k=g-(this.baseHeights[b-this.res]+this.heights[b-
this.res]),this.fluxT[b]*=this.dampingFactor,this.fluxT[b]+=k*l,0>this.fluxT[b]&&(this.fluxT[b]=0));c=0;for(d=1;d<this.res;d++)b=d*this.res+c,this.fluxL[b+1]=0;c=this.res-1;for(d=1;d<this.res;d++)b=d*this.res+c,this.fluxR[b-1]=0;d=0;for(c=1;c<this.res;c++)b=d*this.res+c,this.fluxT[b+this.res]=0;d=this.res-1;for(c=1;c<this.res;c++)b=d*this.res+c,this.fluxB[b-this.res]=0;if(this.obstaclesActive)for(c=Object.keys(this.obstacles),g=c.length,d=0;d<g;d++)b=this.obstacles[c[d]],b.updateFlux(this);for(d=
1;d<f;d++)for(c=1;c<f;c++)b=d*this.res+c,g=(this.heights[b]-this.minWaterHeight)*this.segmentSizeSquared,k=a*(this.fluxR[b]+this.fluxL[b]+this.fluxB[b]+this.fluxT[b]),k>g&&(g/=k,isFinite(g)&&(this.fluxL[b]*=g,this.fluxR[b]*=g,this.fluxB[b]*=g,this.fluxT[b]*=g));for(d=1;d<f;d++)for(c=1;c<f;c++)b=d*this.res+c,k=this.fluxR[b]+this.fluxL[b]+this.fluxB[b]+this.fluxT[b],g=this.fluxR[b-1]+this.fluxL[b+1]+this.fluxB[b-this.res]+this.fluxT[b+this.res],g=(g-k)*a,this.dHeights[b]=g/(this.segmentSize*this.segmentSize),
g=this.heights[b],this.heights[b]+=this.dHeights[b],this.heights[b]<this.minWaterHeight&&(this.heights[b]=this.minWaterHeight),g=0.5*(g+this.heights[b]),0===g?(this.vel[b].x=0,this.vel[b].z=0):(this.vel[b].x=0.5*(this.fluxR[b-1]-this.fluxL[b]+this.fluxR[b]-this.fluxL[b+1])/(this.segmentSize*g),this.vel[b].z=0.5*(this.fluxB[b-this.res]-this.fluxT[b]+this.fluxB[b]-this.fluxT[b+this.res])/(this.segmentSize*g)),this.vel[b].y=this.dHeights[b]}for(d=1;d<f;d++)for(c=1;c<f;c++)b=d*this.res+c,e[b].y=this.baseHeights[b]+
this.heights[b];this.__matchEdges();this.__updateMesh()};
SKUNAMICPU.PipeModelWater.prototype.__matchEdges=function(){var a,d,c,b=this.geometry.vertices,e=this.res-1;d=0;for(a=1;a<e;a++)c=a*this.res+d,b[c].y=b[c+1].y;d=this.res-1;for(a=1;a<e;a++)c=a*this.res+d,b[c].y=b[c-1].y;a=0;for(d=1;d<e;d++)c=a*this.res+d,b[c].y=b[c+this.res].y;a=this.res-1;for(d=1;d<e;d++)c=a*this.res+d,b[c].y=b[c-this.res].y;c=0;b[c].y=0.5*(b[c+1].y+b[c+this.res].y);c=this.res-1;b[c].y=0.5*(b[c-1].y+b[c+this.res].y);c=this.res*(this.res-1);b[c].y=0.5*(b[c+1].y+b[c-this.res].y);c=
this.res*this.res-1;b[c].y=0.5*(b[c-1].y+b[c-this.res].y)};
